// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id              String   @id @default(uuid())
  fullName        String
  email           String   @unique
  emailActivated  Boolean  @default(false)
  password        String   @unique
  phone           String?  @unique
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model Otps {
  id              String   @id @default(uuid())
  email           String   
  code            String   @unique
  expiredAt       String   @unique
  createdAt       DateTime @default(now())
}

model Designer {
  id              Int         @id @default(autoincrement())
  name            String
  address         String
  about           String
  workingDays     Json
  avatarUrl       String?
  ordersFinished  Int
  yearsExperience Int
  services        Service[]
  teamMembers     TeamMember[]
  reviews         Review[]
}

model Service {
  id              Int      @id @default(autoincrement())
  designerId      Int
  title           String
  description     String
  price           Int
  designer        Designer @relation(fields: [designerId], references: [id])
}

model TeamMember {
  id              Int      @id @default(autoincrement())
  designerId      Int
  name            String
  role            String
  avatarUrl       String?
  designer        Designer @relation(fields: [designerId], references: [id])
}

model Review {
  id              Int      @id @default(autoincrement())
  designerId      Int
  customerName    String
  rating          Int
  comment         String
  postedOn        DateTime
  designer        Designer @relation(fields: [designerId], references: [id])
}
model Media {
  id          Int      @id @default(autoincrement())
  designerId  Int
  mediaType   String
  mediaKey    String   // Key to access media in storage
  description String?
  designer    Designer @relation(fields: [designerId], references: [id])
}
